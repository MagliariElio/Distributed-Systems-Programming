package it.ciociariaannunci.logic;

import org.bson.codecs.configuration.CodecRegistries;
import org.bson.codecs.configuration.CodecRegistry;
import org.bson.codecs.pojo.PojoCodecProvider;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import com.mongodb.MongoClientSettings;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;

import it.ciociariaannunci.logic.json.RunnerSeleniumJson;

@EnableAutoConfiguration
@SpringBootApplication
public class CiociariaAnnunciDatabaseApplication {

	@Bean
	public CodecRegistry codecRegistry() {	// conversione automatica da pogo a document e viceversa
		CodecRegistry pojoCodecRegistry = CodecRegistries.fromRegistries(MongoClientSettings.getDefaultCodecRegistry(),
																		CodecRegistries.fromProviders(PojoCodecProvider.builder().automatic(
																																		true)
																																		.build()));
		return pojoCodecRegistry;
	}

	@Bean
	public MongoClient mongoClient() {
		MongoClientSettings settings = MongoClientSettings.builder().codecRegistry(codecRegistry()).build();
		MongoClient client = MongoClients.create(settings);
		return client;
	}

	public static void main(String[] args) {
		try {
			String executeScraper = args[0];
			System.out.println(args.toString());
			if (executeScraper.contains("true")) {
				RunnerSeleniumJson.starter(args);
			}
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

		SpringApplication.run(CiociariaAnnunciDatabaseApplication.class, args);
	}

}
